{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/Desktop/A4-How-does-Coronavirus-spread/my-app/src/LineChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport data from './sample.csv';\nconsole.log(data);\nconst daaa = d3.csv(data, d3.autoType).then(function (data) {\n  // Handle the resolved Promise\n  d3.select(\"#output\").html(data.map(function (d) {\n    return d.Address;\n  }));\n}); // function convert(d) {\n//   return{\n//     d.date : new Date(d.date);\n//     d.positive: +d.positive;\n//   };\n// }\n\nclass LineChart extends Component {\n  componentDidMount() {\n    this.drawChart(data);\n  }\n\n  drawChart(data) {\n    const width = 960;\n    const height = 500;\n    const margin = {\n      top: 50,\n      right: 50,\n      bottom: 50,\n      left: 50\n    };\n    const xScale = d3.scaleTime().domain(d3.extent(data, d => d.date)).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.positive)]).nice().range([height - margin.bottom, margin.top]);\n    const xAxis = d3.axisBottom().ticks(d3.timeDay.every(1)).tickFormat(d3.timeFormat('%m/%d')).scale(xScale);\n    const yAxis = d3.axisLeft().ticks(10).scale(yScale);\n    const line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.positive));\n    const svg = d3.select(this.refs.chart).append(\"svg\").attr('width', width).attr('height', height);\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.bottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left},0)`).call(yAxis);\n    const g = svg.selectAll(\"g\").data(data).enter().append(\"g\");\n    g.append(\"path\").attr(\"stroke-width\", 2).attr(\"stroke\", \"steelblue\").attr(\"fill\", \"none\").attr(\"d\", line(data)); // g.append(\"circle\")\n    //      .attr(\"r\", 3.5)\n    //      .attr(\"stroke\", \"steelblue\")\n    //      .attr(\"fill\", \"steelblue\")\n    //      .attr(\"cx\", function(d) { return xScale(d.date); })\n    //      .attr(\"cy\", function(d) { return yScale(d.positive); })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 20\n      }\n    });\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/rachel/Desktop/A4-How-does-Coronavirus-spread/my-app/src/LineChart.js"],"names":["React","Component","d3","data","console","log","daaa","csv","autoType","then","select","html","map","d","Address","LineChart","componentDidMount","drawChart","width","height","margin","top","right","bottom","left","xScale","scaleTime","domain","extent","date","range","yScale","scaleLinear","max","positive","nice","xAxis","axisBottom","ticks","timeDay","every","tickFormat","timeFormat","scale","yAxis","axisLeft","line","x","y","svg","refs","chart","append","attr","call","g","selectAll","enter","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport * as d3 from \"d3\"\nimport data from './sample.csv'\n\nconsole.log(data)\nconst daaa = d3.csv(data, d3.autoType)\n            .then(function(data) {   // Handle the resolved Promise\n                d3.select(\"#output\").html(\n                  data.map(function(d){\n                    return d.Address;\n                  })\n                );\n              });\n\n\n\n// function convert(d) {\n//   return{\n//     d.date : new Date(d.date);\n//     d.positive: +d.positive;\n//   };\n// }\n\n\nclass LineChart extends Component {\n  componentDidMount() {\n    this.drawChart(data)\n  }\n\n  drawChart(data) {\n    const width = 960;\n    const height = 500;\n    const margin = {top: 50, right: 50, bottom: 50, left:50};\n\n    const xScale = d3.scaleTime()\n      .domain(d3.extent(data, d => d.date))\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain ([0, d3.max(data, d => d.positive)]).nice()\n      .range([height - margin.bottom, margin.top])\n\n    const xAxis = d3.axisBottom()\n      .ticks(d3.timeDay.every(1))\n      .tickFormat(d3.timeFormat('%m/%d'))\n      .scale(xScale);\n\n    const yAxis = d3.axisLeft()\n      .ticks(10)\n      .scale(yScale);\n\n    const line = d3.line()\n      .x(d => xScale(d.date))\n      .y(d => yScale(d.positive))\n\n    const svg = d3.select(this.refs.chart)\n      .append(\"svg\")\n      .attr('width', width )\n      .attr('height', height )\n\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n      .call(xAxis);\n\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(yAxis);\n\n    const g = svg.selectAll(\"g\")\n      .data(data)\n      .enter()\n        .append(\"g\")\n\n    g.append(\"path\")\n         .attr(\"stroke-width\", 2)\n         .attr(\"stroke\", \"steelblue\")\n         .attr(\"fill\", \"none\")\n         .attr(\"d\", line(data))\n\n    // g.append(\"circle\")\n    //      .attr(\"r\", 3.5)\n    //      .attr(\"stroke\", \"steelblue\")\n    //      .attr(\"fill\", \"steelblue\")\n    //      .attr(\"cx\", function(d) { return xScale(d.date); })\n    //      .attr(\"cy\", function(d) { return yScale(d.positive); })\n  }\n\n  render() {return <div ref=\"chart\"></div>}\n}\n\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}