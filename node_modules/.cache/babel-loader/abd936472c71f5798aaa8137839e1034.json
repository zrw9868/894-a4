{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/Desktop/A4-How-does-Coronavirus-spreadirus-spread/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport LineChart from './LineChart';\nimport Slider from './slider';\nimport datajson from './us.json';\nconsole.log(datajson);\nconst columns = datjson.columns;\ndata = {\n  series: [{\n    name: \"US\",\n    positive: datajson.map(d.positive)\n  }],\n  dates: datajson.map(d => new Date(d.date))\n};\nconsole.log(data);\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.updateData = data => {\n      this.setState({\n        data_rendering: data\n      });\n    };\n\n    this.state = {\n      data: data,\n      json: datajson,\n      data_rendering: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, this.state.data_rendering.length, /*#__PURE__*/React.createElement(LineChart, {\n      data: this.state.data,\n      data_to_show: this.state.data_rendering,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Slider, {\n      data: this.state.data,\n      updateToParent: this.updateData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rachel/Desktop/A4-How-does-Coronavirus-spreadirus-spread/my-app/src/App.js"],"names":["React","Component","LineChart","Slider","datajson","console","log","columns","datjson","data","series","name","positive","map","d","dates","Date","date","App","constructor","updateData","setState","data_rendering","state","json","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEAC,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,MAAMG,OAAO,GAAGC,OAAO,CAACD,OAAxB;AAEAE,IAAI,GAAG;AAELC,EAAAA,MAAM,EAAG,CACP;AACEC,IAAAA,IAAI,EAAE,IADR;AAEEC,IAAAA,QAAQ,EAAER,QAAQ,CAACS,GAAT,CAAaC,CAAC,CAACF,QAAf;AAFZ,GADO,CAFJ;AAQLG,EAAAA,KAAK,EAAEX,QAAQ,CAACS,GAAT,CAAcC,CAAC,IAAI,IAAIE,IAAJ,CAASF,CAAC,CAACG,IAAX,CAAnB;AARF,CAAP;AAWAZ,OAAO,CAACC,GAAR,CAAYG,IAAZ;;AAEE,MAAMS,GAAN,SAAkBjB,SAAlB,CAA4B;AAE1BkB,EAAAA,WAAW,GAAE;AACX;;AADW,SASbC,UATa,GASCX,IAAD,IAAU;AACrB,WAAKY,QAAL,CAAc;AAACC,QAAAA,cAAc,EAAGb;AAAlB,OAAd;AACD,KAXY;;AAEX,SAAKc,KAAL,GAAa;AACXd,MAAAA,IAAI,EAAGA,IADI;AAEXe,MAAAA,IAAI,EAAGpB,QAFI;AAGXkB,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKD;;AAQDG,EAAAA,MAAM,GAAI;AACR,wBACE;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWD,cAAX,CAA0BI,MAD/B,eAEI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAG,KAAKH,KAAL,CAAWd,IAA7B;AAAmC,MAAA,YAAY,EAAE,KAAKc,KAAL,CAAWD,cAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAG,KAAKC,KAAL,CAAWd,IAA1B;AAAgC,MAAA,cAAc,EAAI,KAAKW,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADA,CADF;AASD;;AA3ByB;;AAgC9B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport LineChart from './LineChart'\nimport Slider from './slider'\nimport datajson from './us.json'\n\nconsole.log(datajson)\n\nconst columns = datjson.columns\n\ndata = {\n\n  series : [\n    {\n      name: \"US\",\n      positive: datajson.map(d.positive)\n    }\n  ],\n  dates: datajson.map (d => new Date(d.date))\n}\n\nconsole.log(data)\n\n  class App extends Component {\n\n    constructor(){\n      super();\n      this.state = {\n        data : data,\n        json : datajson,\n        data_rendering :{}\n      }\n    }\n\n    updateData = (data) => {\n      this.setState({data_rendering : data})\n    }\n\n\n\n    render () {\n      return (\n        <div className = \"App\">\n        <div>\n            {this.state.data_rendering.length}\n            <LineChart data= {this.state.data} data_to_show={this.state.data_rendering}/>\n            <Slider data= {this.state.data} updateToParent = {this.updateData}/>\n        </div>\n        </div>\n      )\n    }\n\n  }\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}