{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/Desktop/A4-How-does-Coronavirus-spread/my-app/src/LineChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nconst data = d3.csvParse(\"data/sample.csv\", d3.autoType);\nconsole.log(data);\nconst width = 960;\nconst height = 500;\nconst margin = {\n  top: 50,\n  right: 50,\n  bottom: 50,\n  left: 50\n};\n\nclass LineChart extends Component {\n  componentDidMount() {\n    this.drawChart(data);\n  }\n\n  drawChart(data) {\n    const xScale = d3.scaleTime().domain(d3.extent(data, d => d.date)).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.positive)]).nice().range([height - margin.bottom, margin.top]);\n    const line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.positive));\n    const svg = d3.select(this.refs.chart).append(\"svg\").attr('width', width).attr('height', height);\n    const g = svg.selectAll(\"g\").data(data).enter().append(\"g\");\n    g.append(\"path\").attr(\"stroke-width\", 2).attr(\"stroke\", \"steelblue\").attr(\"fill\", \"none\").attr(\"d\", line(data));\n    g.append(\"circle\").attr(\"r\", 3.5).attr(\"stroke\", \"steelblue\").attr(\"fill\", \"steelblue\").attr(\"cx\", function (d) {\n      return xScale(d.date);\n    }).attr(\"cy\", function (d) {\n      return yScale(d.positive);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }\n    });\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/rachel/Desktop/A4-How-does-Coronavirus-spread/my-app/src/LineChart.js"],"names":["React","Component","d3","data","csvParse","autoType","console","log","width","height","margin","top","right","bottom","left","LineChart","componentDidMount","drawChart","xScale","scaleTime","domain","extent","d","date","range","yScale","scaleLinear","max","positive","nice","line","x","y","svg","select","refs","chart","append","attr","g","selectAll","enter","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as d3 from \"d3\";\n\nconst data = d3.csvParse(\"data/sample.csv\", d3.autoType);\nconsole.log(data)\nconst width = 960;\nconst height = 500;\nconst margin = {top: 50, right: 50, bottom: 50, left:50};\n\n\nclass LineChart extends Component {\n\n  componentDidMount() {\n\n    this.drawChart(data)\n  }\n\n  drawChart(data) {\n    const xScale = d3.scaleTime()\n      .domain(d3.extent(data, d => d.date))\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain ([0, d3.max(data, d => d.positive)]).nice()\n      .range([height - margin.bottom, margin.top])\n\n    const line = d3.line()\n      .x(d => xScale(d.date))\n      .y(d => yScale(d.positive))\n\n    const svg = d3.select(this.refs.chart)\n      .append(\"svg\")\n      .attr('width', width )\n      .attr('height', height )\n\n    const g = svg.selectAll(\"g\")\n      .data(data)\n      .enter()\n        .append(\"g\")\n\n    g.append(\"path\")\n         .attr(\"stroke-width\", 2)\n         .attr(\"stroke\", \"steelblue\")\n         .attr(\"fill\", \"none\")\n         .attr(\"d\", line(data));\n\n    g.append(\"circle\")\n         .attr(\"r\", 3.5)\n         .attr(\"stroke\", \"steelblue\")\n         .attr(\"fill\", \"steelblue\")\n         .attr(\"cx\", function(d) { return xScale(d.date); })\n         .attr(\"cy\", function(d) { return yScale(d.positive); });\n  }\n\n  render() {return <div ref=\"chart\"></div>}\n}\n\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}