{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/Desktop/A4-How-does-Coronavirus-spreadirus-spread/my-app/src/Map.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass Map extends Component {\n  componentDidMount() {\n    this.drawMap();\n  }\n\n  drawMap() {\n    //Width and height of map\n    var width = 960;\n    var height = 500;\n    var active = d3.select(null);\n    var lowColor = '#edd6d1';\n    var highColor = '#bd300d'; // D3 Projection\n\n    var projection = d3.geoAlbersUsa().translate([width / 2, height / 2]) // translate to center of screen\n    .scale([1000]); // scale things down so see entire US\n\n    var zoom = d3.zoom() // no longer in d3 v4 - zoom initialises with zoomIdentity, so it's already at origin\n    // .translate([0, 0])\n    // .scale(1)\n    .scaleExtent([1, 8]).on(\"zoom\", zoomed); // Define path generator\n\n    var path = d3.geoPath() // path generator that will convert GeoJSON to SVG paths\n    .projection(projection); // tell path generator to use albersUsa projection\n    //Create SVG element and append map to the SVG\n\n    var svg = d3.select(this.refs.map).append(\"svg\").attr(\"width\", width).attr(\"height\", height).on(\"click\", stopped, true);\n    svg.append(\"rect\").attr(\"class\", \"background\").attr(\"width\", width).attr(\"height\", height).on(\"click\", reset);\n    var g = svg.append(\"g\");\n    svg.call(zoom); // Load in my states data!\n\n    d3.csv(\"statesdata.csv\", function (data) {\n      var dataArray = [];\n\n      for (var d = 0; d < data.length; d++) {\n        dataArray.push(parseFloat(data[d].value));\n      }\n\n      var minVal = d3.min(dataArray);\n      var maxVal = d3.max(dataArray);\n      var ramp = d3.scaleLog().domain([minVal, maxVal]).range([lowColor, highColor]); // Load GeoJSON data and merge with states data\n\n      d3.json(\"us-states.json\", function (json) {\n        console.log(data); // Loop through each state data value in the .csv file\n\n        for (var i = 0; i < data.length; i++) {\n          // Grab State Name\n          var dataState = data[i].state; // Grab data value\n\n          var dataValue = data[i].value; // Find the corresponding state inside the GeoJSON\n\n          for (var j = 0; j < json.features.length; j++) {\n            var jsonState = json.features[j].properties.name;\n\n            if (dataState == jsonState) {\n              // Copy the data value into the JSON\n              json.features[j].properties.value = dataValue; // Stop looking through the JSON\n\n              break;\n            }\n          }\n        } // Bind the data to the SVG and create one path per GeoJSON feature\n\n\n        g.selectAll(\"path\").data(json.features).enter().append(\"path\").attr(\"d\", path).attr(\"class\", \"feature\").on(\"click\", clicked).style(\"stroke\", \"#fff\").style(\"stroke-width\", \"1\").style(\"fill\", function (d) {\n          return ramp(d.properties.value);\n        });\n        g.selectAll(\"text\").data(json.features).enter().append(\"svg:text\").text(function (d) {\n          return d.properties.abbr + \": \" + d.properties.value;\n        }).attr(\"x\", function (d) {\n          return path.centroid(d)[0];\n        }).attr(\"y\", function (d) {\n          return path.centroid(d)[1];\n        }).attr(\"text-anchor\", \"middle\").attr('font-size', '3pt'); // add a legend\n\n        var w = 140,\n            h = 300;\n        var key = d3.select(\"body\").append(\"svg\").attr(\"width\", w).attr(\"height\", h).attr(\"class\", \"legend\");\n        var legend = key.append(\"defs\").append(\"svg:linearGradient\").attr(\"id\", \"gradient\").attr(\"x1\", \"100%\").attr(\"y1\", \"0%\").attr(\"x2\", \"100%\").attr(\"y2\", \"100%\").attr(\"spreadMethod\", \"pad\");\n        legend.append(\"stop\").attr(\"offset\", \"0%\").attr(\"stop-color\", highColor).attr(\"stop-opacity\", 1);\n        legend.append(\"stop\").attr(\"offset\", \"100%\").attr(\"stop-color\", lowColor).attr(\"stop-opacity\", 1);\n        key.append(\"rect\").attr(\"width\", w - 100).attr(\"height\", h).style(\"fill\", \"url(#gradient)\").attr(\"transform\", \"translate(0,10)\");\n        var y = d3.scaleLinear().range([h, 0]).domain([minVal, maxVal]);\n        var yAxis = d3.axisRight(y);\n        key.append(\"g\").attr(\"class\", \"y axis\").attr(\"transform\", \"translate(41,10)\").call(yAxis);\n      });\n    });\n\n    function clicked(d) {\n      if (active.node() === this) return reset();\n      active.classed(\"active\", false);\n      active = d3.select(this).classed(\"active\", true);\n      var bounds = path.bounds(d),\n          dx = bounds[1][0] - bounds[0][0],\n          dy = bounds[1][1] - bounds[0][1],\n          x = (bounds[0][0] + bounds[1][0]) / 2,\n          y = (bounds[0][1] + bounds[1][1]) / 2,\n          scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height))),\n          translate = [width / 2 - scale * x, height / 2 - scale * y];\n      svg.transition().duration(750) // .call(zoom.translate(translate).scale(scale).event); // not in d3 v4\n      .call(zoom.transform, d3.zoomIdentity.translate(translate[0], translate[1]).scale(scale)); // updated for d3 v4\n    }\n\n    function reset() {\n      active.classed(\"active\", false);\n      active = d3.select(null);\n      svg.transition().duration(750) // .call( zoom.transform, d3.zoomIdentity.translate(0, 0).scale(1) ); // not in d3 v4\n      .call(zoom.transform, d3.zoomIdentity); // updated for d3 v4\n    }\n\n    function zoomed() {\n      g.style(\"stroke-width\", 1.5 / d3.event.transform.k + \"px\"); // g.attr(\"transform\", \"translate(\" + d3.event.translate + \")scale(\" + d3.event.scale + \")\"); // not in d3 v4\n\n      g.attr(\"transform\", d3.event.transform); // updated for d3 v4\n    }\n\n    function stopped() {\n      if (d3.event.defaultPrevented) d3.event.stopPropagation();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 20\n      }\n    });\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/rachel/Desktop/A4-How-does-Coronavirus-spreadirus-spread/my-app/src/Map.js"],"names":["React","Component","d3","Map","componentDidMount","drawMap","width","height","active","select","lowColor","highColor","projection","geoAlbersUsa","translate","scale","zoom","scaleExtent","on","zoomed","path","geoPath","svg","refs","map","append","attr","stopped","reset","g","call","csv","data","dataArray","d","length","push","parseFloat","value","minVal","min","maxVal","max","ramp","scaleLog","domain","range","json","console","log","i","dataState","state","dataValue","j","features","jsonState","properties","name","selectAll","enter","clicked","style","text","abbr","centroid","w","h","key","legend","y","scaleLinear","yAxis","axisRight","node","classed","bounds","dx","dy","x","Math","transition","duration","transform","zoomIdentity","event","k","defaultPrevented","stopPropagation","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport * as d3 from \"d3\"\n\n\nclass Map extends Component {\n\n  componentDidMount() {\n    this.drawMap()\n  }\n  drawMap() {\n    //Width and height of map\n    var width = 960;\n    var height = 500;\n    var active = d3.select(null);\n\n    var lowColor = '#edd6d1'\n    var highColor = '#bd300d'\n\n    // D3 Projection\n    var projection = d3.geoAlbersUsa()\n      .translate([width / 2, height / 2]) // translate to center of screen\n      .scale([1000]); // scale things down so see entire US\n\n    \tvar zoom = d3.zoom()\n    \t    // no longer in d3 v4 - zoom initialises with zoomIdentity, so it's already at origin\n    \t    // .translate([0, 0])\n    \t    // .scale(1)\n    \t    .scaleExtent([1, 8])\n    \t    .on(\"zoom\", zoomed);\n\n    // Define path generator\n    var path = d3.geoPath() // path generator that will convert GeoJSON to SVG paths\n      .projection(projection); // tell path generator to use albersUsa projection\n\n    //Create SVG element and append map to the SVG\n    var svg = d3.select(this.refs.map)\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n    \t.on(\"click\", stopped, true);\n\n    \tsvg.append(\"rect\")\n    \t    .attr(\"class\", \"background\")\n    \t    .attr(\"width\", width)\n    \t    .attr(\"height\", height)\n    \t    .on(\"click\", reset);\n\n    var g = svg.append(\"g\");\n\n    svg.call(zoom);\n\n    // Load in my states data!\n    d3.csv(\"statesdata.csv\", function(data) {\n    \tvar dataArray = [];\n    \tfor (var d = 0; d < data.length; d++) {\n    \t\tdataArray.push(parseFloat(data[d].value))\n    \t}\n    \tvar minVal = d3.min(dataArray)\n    \tvar maxVal = d3.max(dataArray)\n    \tvar ramp = d3.scaleLog().domain([minVal,maxVal]).range([lowColor,highColor])\n\n      // Load GeoJSON data and merge with states data\n      d3.json(\"us-states.json\", function(json) {\n    \t\tconsole.log(data);\n        // Loop through each state data value in the .csv file\n        for (var i = 0; i < data.length; i++) {\n\n          // Grab State Name\n          var dataState = data[i].state;\n\n          // Grab data value\n          var dataValue = data[i].value;\n\n          // Find the corresponding state inside the GeoJSON\n          for (var j = 0; j < json.features.length; j++) {\n            var jsonState = json.features[j].properties.name;\n\n            if (dataState == jsonState) {\n\n              // Copy the data value into the JSON\n              json.features[j].properties.value = dataValue;\n\n              // Stop looking through the JSON\n              break;\n            }\n          }\n        }\n\n        // Bind the data to the SVG and create one path per GeoJSON feature\n        g.selectAll(\"path\")\n          .data(json.features)\n          .enter()\n          .append(\"path\")\n          .attr(\"d\", path)\n    \t\t\t.attr(\"class\",\"feature\")\n    \t\t\t.on(\"click\",clicked)\n          .style(\"stroke\", \"#fff\")\n          .style(\"stroke-width\", \"1\")\n          .style(\"fill\", function(d) { return ramp(d.properties.value) });\n\n    \t\t\tg.selectAll(\"text\")\n    \t    .data(json.features)\n    \t    .enter()\n    \t    .append(\"svg:text\")\n    \t    .text(function(d){\n    \t        return d.properties.abbr+\": \"+d.properties.value;\n    \t    })\n    \t    .attr(\"x\", function(d){\n    \t        return path.centroid(d)[0];\n    \t    })\n    \t    .attr(\"y\", function(d){\n    \t        return  path.centroid(d)[1];\n    \t    })\n    \t    .attr(\"text-anchor\",\"middle\")\n    \t    .attr('font-size','3pt');\n\n    \t\t// add a legend\n    \t\tvar w = 140, h = 300;\n\n    \t\tvar key = d3.select(\"body\")\n    \t\t\t.append(\"svg\")\n    \t\t\t.attr(\"width\", w)\n    \t\t\t.attr(\"height\", h)\n    \t\t\t.attr(\"class\", \"legend\");\n\n    \t\tvar legend = key.append(\"defs\")\n    \t\t\t.append(\"svg:linearGradient\")\n    \t\t\t.attr(\"id\", \"gradient\")\n    \t\t\t.attr(\"x1\", \"100%\")\n    \t\t\t.attr(\"y1\", \"0%\")\n    \t\t\t.attr(\"x2\", \"100%\")\n    \t\t\t.attr(\"y2\", \"100%\")\n    \t\t\t.attr(\"spreadMethod\", \"pad\");\n\n    \t\tlegend.append(\"stop\")\n    \t\t\t.attr(\"offset\", \"0%\")\n    \t\t\t.attr(\"stop-color\", highColor)\n    \t\t\t.attr(\"stop-opacity\", 1);\n\n    \t\tlegend.append(\"stop\")\n    \t\t\t.attr(\"offset\", \"100%\")\n    \t\t\t.attr(\"stop-color\", lowColor)\n    \t\t\t.attr(\"stop-opacity\", 1);\n\n    \t\tkey.append(\"rect\")\n    \t\t\t.attr(\"width\", w - 100)\n    \t\t\t.attr(\"height\", h)\n    \t\t\t.style(\"fill\", \"url(#gradient)\")\n    \t\t\t.attr(\"transform\", \"translate(0,10)\");\n\n    \t\tvar y = d3.scaleLinear()\n    \t\t\t.range([h, 0])\n    \t\t\t.domain([minVal, maxVal]);\n\n    \t\tvar yAxis = d3.axisRight(y);\n\n    \t\tkey.append(\"g\")\n    \t\t\t.attr(\"class\", \"y axis\")\n    \t\t\t.attr(\"transform\", \"translate(41,10)\")\n    \t\t\t.call(yAxis)\n      });\n    });\n    function clicked(d) {\n      if (active.node() === this) return reset();\n      active.classed(\"active\", false);\n      active = d3.select(this).classed(\"active\", true);\n\n      var bounds = path.bounds(d),\n          dx = bounds[1][0] - bounds[0][0],\n          dy = bounds[1][1] - bounds[0][1],\n          x = (bounds[0][0] + bounds[1][0]) / 2,\n          y = (bounds[0][1] + bounds[1][1]) / 2,\n          scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height))),\n          translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      svg.transition()\n          .duration(750)\n          // .call(zoom.translate(translate).scale(scale).event); // not in d3 v4\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale) ); // updated for d3 v4\n    }\n\n    function reset() {\n      active.classed(\"active\", false);\n      active = d3.select(null);\n\n      svg.transition()\n          .duration(750)\n          // .call( zoom.transform, d3.zoomIdentity.translate(0, 0).scale(1) ); // not in d3 v4\n          .call( zoom.transform, d3.zoomIdentity ); // updated for d3 v4\n    }\n\n    function zoomed() {\n      g.style(\"stroke-width\", 1.5 / d3.event.transform.k + \"px\");\n      // g.attr(\"transform\", \"translate(\" + d3.event.translate + \")scale(\" + d3.event.scale + \")\"); // not in d3 v4\n      g.attr(\"transform\", d3.event.transform); // updated for d3 v4\n    }\n    function stopped() {\n      if (d3.event.defaultPrevented) d3.event.stopPropagation();\n    }\n  }\n  render() {return <div ref=\"map\"></div>}\n}\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}