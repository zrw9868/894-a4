{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/Desktop/A4-How-does-Coronavirus-spread/my-app/src/LineChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport dataJSON from './sample.csv';\nconst data = d3.csv(dataJSON, function convert(d) {\n  return {\n    date: new Date(d.date),\n    value: +d.value\n  };\n});\n\nfunction convert(d) {\n  return {\n    date: new Date(d.date),\n    value: +d.value\n  };\n}\n\nclass LineChart extends Component {\n  componentDidMount() {\n    this.drawChart(dataJSON);\n  }\n\n  drawChart(data) {\n    const width = 960;\n    const height = 500;\n    const margin = {\n      top: 50,\n      right: 50,\n      bottom: 50,\n      left: 50\n    };\n    const xScale = d3.scaleTime().domain(d3.extent(data, d => d.date)).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.positive)]).nice().range([height - margin.bottom, margin.top]);\n    const xAxis = d3.axisBottom().ticks(d3.timeDay.every(1)).tickFormat(d3.timeFormat('%m/%d')).scale(xScale);\n    const yAxis = d3.axisLeft().ticks(10).scale(yScale);\n    const line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.positive));\n    const svg = d3.select(this.refs.chart).append(\"svg\").attr('width', width).attr('height', height);\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.bottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left},0)`).call(yAxis);\n    const g = svg.selectAll(\"g\").data(data).enter().append(\"g\");\n    g.append(\"path\").attr(\"stroke-width\", 2).attr(\"stroke\", \"steelblue\").attr(\"fill\", \"none\").attr(\"d\", line(dataJSON)); // g.append(\"circle\")\n    //      .attr(\"r\", 3.5)\n    //      .attr(\"stroke\", \"steelblue\")\n    //      .attr(\"fill\", \"steelblue\")\n    //      .attr(\"cx\", function(d) { return xScale(d.date); })\n    //      .attr(\"cy\", function(d) { return yScale(d.positive); })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }\n    });\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/rachel/Desktop/A4-How-does-Coronavirus-spread/my-app/src/LineChart.js"],"names":["React","Component","d3","dataJSON","data","csv","convert","d","date","Date","value","LineChart","componentDidMount","drawChart","width","height","margin","top","right","bottom","left","xScale","scaleTime","domain","extent","range","yScale","scaleLinear","max","positive","nice","xAxis","axisBottom","ticks","timeDay","every","tickFormat","timeFormat","scale","yAxis","axisLeft","line","x","y","svg","select","refs","chart","append","attr","call","g","selectAll","enter","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport * as d3 from \"d3\"\nimport dataJSON from './sample.csv';\n\nconst data = d3.csv(dataJSON, function convert(d) {\n  return {\n    date: new Date(d.date),\n    value: +d.value\n  };\n})\n\nfunction convert(d) {\n  return {\n    date: new Date(d.date),\n    value: +d.value\n  };\n}\n\nclass LineChart extends Component {\n\n  componentDidMount() {\n    this.drawChart(dataJSON)\n  }\n\n  drawChart(data) {\n    const width = 960;\n    const height = 500;\n    const margin = {top: 50, right: 50, bottom: 50, left:50};\n\n    const xScale = d3.scaleTime()\n      .domain(d3.extent(data, d => d.date))\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain ([0, d3.max(data, d => d.positive)]).nice()\n      .range([height - margin.bottom, margin.top])\n\n    const xAxis = d3.axisBottom()\n      .ticks(d3.timeDay.every(1))\n      .tickFormat(d3.timeFormat('%m/%d'))\n      .scale(xScale);\n\n    const yAxis = d3.axisLeft()\n      .ticks(10)\n      .scale(yScale);\n\n    const line = d3.line()\n      .x(d => xScale(d.date))\n      .y(d => yScale(d.positive))\n\n    const svg = d3.select(this.refs.chart)\n      .append(\"svg\")\n      .attr('width', width )\n      .attr('height', height )\n\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n      .call(xAxis);\n\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(yAxis);\n\n    const g = svg.selectAll(\"g\")\n      .data(data)\n      .enter()\n        .append(\"g\")\n\n    g.append(\"path\")\n         .attr(\"stroke-width\", 2)\n         .attr(\"stroke\", \"steelblue\")\n         .attr(\"fill\", \"none\")\n         .attr(\"d\", line(dataJSON))\n\n    // g.append(\"circle\")\n    //      .attr(\"r\", 3.5)\n    //      .attr(\"stroke\", \"steelblue\")\n    //      .attr(\"fill\", \"steelblue\")\n    //      .attr(\"cx\", function(d) { return xScale(d.date); })\n    //      .attr(\"cy\", function(d) { return yScale(d.positive); })\n  }\n\n  render() {return <div ref=\"chart\"></div>}\n}\n\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}