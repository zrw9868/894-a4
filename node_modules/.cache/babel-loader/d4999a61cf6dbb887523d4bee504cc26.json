{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/Desktop/A4-How-does-Coronavirus-spreadirus-spread/my-app/src/LineChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nconst width = 960;\nconst height = 500;\nconst margin = {\n  top: 50,\n  right: 50,\n  bottom: 100,\n  left: 50\n};\n\nclass LineChart extends Component {\n  componentDidMount() {\n    this.drawChart(this.props.data);\n  }\n\n  componentDidUpdate() {\n    this.update(this.props.data, this.props.threshold, this.props.selected);\n  }\n\n  drawChart(data) {\n    // ------- scale ---------//\n    // let new_data = data.filter(function(d) {return d.date <\n    var startDate = data.date[0],\n        endDate = data.date[data.dates.length - 1];\n    var maxi = d3.max(data.series, s => d3.max(s.positive));\n    var xScale = d3.scaleTime().domain([startDate, endDate]).range([margin.left, width - margin.right]);\n    var yScale = d3.scaleLinear() // d3.max(data, d => d.positive)\n    .domain([0, maxi]).nice().range([height - margin.bottom, margin.top]); // --------- axis --------//\n\n    const xAxis = d3.axisBottom().ticks(d3.timeDay.every(1)).tickFormat(d3.timeFormat('%m/%d')).scale(xScale);\n    const yAxis = d3.axisLeft().ticks(10).scale(yScale); // ------- draw --------//\n\n    this.svg = d3.select(this.refs.chart).append(\"svg\").attr('width', width).attr('height', height);\n    this.svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.bottom})`).call(xAxis);\n    this.svg.append(\"g\").attr(\"transform\", `translate(${margin.left},0)`).call(yAxis);\n    this.chart = this.svg.append(\"g\");\n  }\n\n  update(data, threshold, selected) {\n    // let new_data = data.filter(function(d) {return d.date <\n    var index = data.dates.findIndex(function (d) {\n      return d.getDate() === threshold.getDate();\n    });\n    var new_data = data.series.map(function (d) {\n      if (d.name in selected) {\n        return {\n          date: d.name,\n          positive: d.positive.slice(0, index)\n        };\n      }\n    });\n    var startDate = data.date[0],\n        endDate = data.date[data.dates.length - 1];\n    var maxi = d3.max(data.series, s => d3.max(s.positive));\n    var xScale = d3.scaleTime().domain([startDate, endDate]).range([margin.left, width - margin.right]);\n    var yScale = d3.scaleLinear().domain([0, maxi]).nice().range([height - margin.bottom, margin.top]);\n    var line = d3.line().defined(d => d != \"undefined\").defined(d => !isNaN(d.value)).x((d, i) => xScale(data.dates[i])).y(d => yScale(d));\n    this.chart.selectAll(\"path\").data(new_data).join(\"path\").attr(\"stroke-width\", 2).attr(\"stroke\", \"steelblue\").attr(\"fill\", \"none\").attr(\"d\", d => line(d.positive));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 20\n      }\n    });\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/rachel/Desktop/A4-How-does-Coronavirus-spreadirus-spread/my-app/src/LineChart.js"],"names":["React","Component","d3","width","height","margin","top","right","bottom","left","LineChart","componentDidMount","drawChart","props","data","componentDidUpdate","update","threshold","selected","startDate","date","endDate","dates","length","maxi","max","series","s","positive","xScale","scaleTime","domain","range","yScale","scaleLinear","nice","xAxis","axisBottom","ticks","timeDay","every","tickFormat","timeFormat","scale","yAxis","axisLeft","svg","select","refs","chart","append","attr","call","index","findIndex","d","getDate","new_data","map","name","slice","line","defined","isNaN","value","x","i","y","selectAll","join","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport * as d3 from \"d3\"\n\nconst width = 960;\nconst height = 500;\nconst margin = {top: 50, right: 50, bottom: 100, left:50};\n\nclass LineChart extends Component {\n\n  componentDidMount() {\n    this.drawChart(this.props.data)\n  }\n\n  componentDidUpdate(){\n    this.update(this.props.data, this.props.threshold, this.props.selected)\n  }\n\n  drawChart(data) {\n    // ------- scale ---------//\n    // let new_data = data.filter(function(d) {return d.date <\n    var startDate = data.date[0],\n        endDate = data.date[data.dates.length-1];\n\n    var maxi = d3.max(data.series, s => d3.max(s.positive))\n\n    var xScale = d3.scaleTime()\n      .domain([startDate, endDate])\n      .range([margin.left, width - margin.right]);\n\n    var yScale = d3.scaleLinear()\n      // d3.max(data, d => d.positive)\n      .domain ([0, maxi]).nice()\n      .range([height - margin.bottom, margin.top])\n\n    // --------- axis --------//\n    const xAxis = d3.axisBottom()\n      .ticks(d3.timeDay.every(1))\n      .tickFormat(d3.timeFormat('%m/%d'))\n      .scale(xScale);\n\n    const yAxis = d3.axisLeft()\n      .ticks(10)\n      .scale(yScale);\n\n    // ------- draw --------//\n    this.svg = d3.select(this.refs.chart)\n      .append(\"svg\")\n      .attr('width', width )\n      .attr('height', height )\n\n    this.svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n      .call(xAxis);\n\n    this.svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(yAxis);\n\n    this.chart = this.svg.append(\"g\")\n    }\n\n    update(data, threshold, selected){\n      // let new_data = data.filter(function(d) {return d.date <\n      var index = data.dates.findIndex(function(d) {return d.getDate() === threshold.getDate()});\n      var new_data = data.series.map(function(d) {\n          if (d.name in selected){\n            return {\n                date: d.name,\n                positive: d.positive.slice(0,index)\n            }\n          }\n      })\n\n      var startDate = data.date[0],\n          endDate = data.date[data.dates.length-1];\n\n      var maxi = d3.max(data.series, s => d3.max(s.positive))\n\n      var xScale = d3.scaleTime()\n        .domain([startDate, endDate])\n        .range([margin.left, width - margin.right]);\n\n      var yScale = d3.scaleLinear()\n        .domain ([0, maxi]).nice()\n        .range([height - margin.bottom, margin.top])\n\n\n\n      var line = d3.line()\n        .defined(d => d != \"undefined\")\n        .defined(d => !isNaN(d.value))\n        .x((d,i) => xScale(data.dates[i]))\n        .y(d => yScale(d))\n\n      this.chart.selectAll(\"path\")\n        .data(new_data)\n          .join(\"path\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", \"steelblue\")\n            .attr(\"fill\", \"none\")\n            .attr(\"d\", d=>line(d.positive))\n\n    }\n\n  render() {return <div ref=\"chart\"></div>}\n}\n\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}