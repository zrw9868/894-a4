{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/Desktop/A4-How-does-Coronavirus-spreadirus-spread/my-app/src/LineChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass LineChart extends Component {\n  componentDidMount() {\n    this.drawChart(this.props.data);\n  }\n\n  drawChart(data) {\n    const width = 960;\n    const height = 500;\n    const margin = {\n      top: 50,\n      right: 50,\n      bottom: 50,\n      left: 50\n    };\n    const xScale = d3.scaleTime().domain(d3.extent(data, d => d.date)).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.positive)]).nice().range([height - margin.bottom, margin.top]);\n    const xAxis = d3.axisBottom().ticks(d3.timeDay.every(1)).tickFormat(d3.timeFormat('%m/%d')).scale(xScale);\n    const yAxis = d3.axisLeft().ticks(10).scale(yScale);\n    const line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.positive));\n    const svg = d3.select(this.refs.chart).append(\"svg\").attr('width', width).attr('height', height);\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.bottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left},0)`).call(yAxis);\n    const g = svg.append(\"g\");\n    g.append(\"path\").datum(data).attr(\"stroke-width\", 2).attr(\"stroke\", \"steelblue\").attr(\"fill\", \"none\").attr(\"d\", line);\n    g.selectAll('circle').data(data).enter().append(\"circle\").attr(\"r\", 4.5).attr(\"stroke\", \"steelblue\").attr(\"fill\", \"steelblue\").attr(\"cx\", function (d) {\n      return xScale(d.date);\n    }).attr(\"cy\", function (d) {\n      return yScale(d.positive);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }\n    });\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/rachel/Desktop/A4-How-does-Coronavirus-spreadirus-spread/my-app/src/LineChart.js"],"names":["React","Component","d3","LineChart","componentDidMount","drawChart","props","data","width","height","margin","top","right","bottom","left","xScale","scaleTime","domain","extent","d","date","range","yScale","scaleLinear","max","positive","nice","xAxis","axisBottom","ticks","timeDay","every","tickFormat","timeFormat","scale","yAxis","axisLeft","line","x","y","svg","select","refs","chart","append","attr","call","g","datum","selectAll","enter","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport * as d3 from \"d3\"\n\nclass LineChart extends Component {\n  componentDidMount() {\n    this.drawChart(this.props.data)\n  }\n\n  drawChart(data) {\n    const width = 960;\n    const height = 500;\n    const margin = {top: 50, right: 50, bottom: 50, left:50};\n\n    const xScale = d3.scaleTime()\n      .domain(d3.extent(data, d => d.date))\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain ([0, d3.max(data, d => d.positive)]).nice()\n      .range([height - margin.bottom, margin.top])\n\n    const xAxis = d3.axisBottom()\n      .ticks(d3.timeDay.every(1))\n      .tickFormat(d3.timeFormat('%m/%d'))\n      .scale(xScale);\n\n    const yAxis = d3.axisLeft()\n      .ticks(10)\n      .scale(yScale);\n\n    const line = d3.line()\n      .x(d => xScale(d.date))\n      .y(d => yScale(d.positive))\n\n    const svg = d3.select(this.refs.chart)\n      .append(\"svg\")\n      .attr('width', width )\n      .attr('height', height )\n\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n      .call(xAxis);\n\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(yAxis);\n\n    const g = svg.append(\"g\")\n\n    g.append(\"path\")\n         .datum(data)\n         .attr(\"stroke-width\", 2)\n         .attr(\"stroke\", \"steelblue\")\n         .attr(\"fill\", \"none\")\n         .attr(\"d\", line)\n\n    g.selectAll('circle')\n      .data(data)\n      .enter()\n        .append(\"circle\")\n         .attr(\"r\", 4.5)\n         .attr(\"stroke\", \"steelblue\")\n         .attr(\"fill\", \"steelblue\")\n         .attr(\"cx\", function(d) { return xScale(d.date); })\n         .attr(\"cy\", function(d) { return yScale(d.positive); })\n  }\n\n  render() {return <div ref=\"chart\"></div>}\n}\n\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}