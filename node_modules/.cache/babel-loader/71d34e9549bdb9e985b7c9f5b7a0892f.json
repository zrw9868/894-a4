{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/Desktop/A4-How-does-Coronavirus-spread/my-app/src/LineChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\"; // import data from './sample.csv'\n\nconst data = d3.csvParse('./sample.csv', d3.autoType); // function convert(d) {\n//   return{\n//     d.date : new Date(d.date);\n//     d.positive: +d.positive;\n//   };\n// }\n\nclass LineChart extends Component {\n  componentDidMount() {\n    this.drawChart(data);\n  }\n\n  drawChart(data) {\n    const width = 960;\n    const height = 500;\n    const margin = {\n      top: 50,\n      right: 50,\n      bottom: 50,\n      left: 50\n    };\n    const xScale = d3.scaleTime().domain(d3.extent(data, d => d.date)).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.positive)]).nice().range([height - margin.bottom, margin.top]);\n    const xAxis = d3.axisBottom().ticks(d3.timeDay.every(1)).tickFormat(d3.timeFormat('%m/%d')).scale(xScale);\n    const yAxis = d3.axisLeft().ticks(10).scale(yScale);\n    const line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.positive));\n    const svg = d3.select(this.refs.chart).append(\"svg\").attr('width', width).attr('height', height);\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.bottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left},0)`).call(yAxis);\n    const g = svg.selectAll(\"g\").data(data).enter().append(\"g\");\n    g.append(\"path\").attr(\"stroke-width\", 2).attr(\"stroke\", \"steelblue\").attr(\"fill\", \"none\").attr(\"d\", line(data)); // g.append(\"circle\")\n    //      .attr(\"r\", 3.5)\n    //      .attr(\"stroke\", \"steelblue\")\n    //      .attr(\"fill\", \"steelblue\")\n    //      .attr(\"cx\", function(d) { return xScale(d.date); })\n    //      .attr(\"cy\", function(d) { return yScale(d.positive); })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }\n    });\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/rachel/Desktop/A4-How-does-Coronavirus-spread/my-app/src/LineChart.js"],"names":["React","Component","d3","data","csvParse","autoType","LineChart","componentDidMount","drawChart","width","height","margin","top","right","bottom","left","xScale","scaleTime","domain","extent","d","date","range","yScale","scaleLinear","max","positive","nice","xAxis","axisBottom","ticks","timeDay","every","tickFormat","timeFormat","scale","yAxis","axisLeft","line","x","y","svg","select","refs","chart","append","attr","call","g","selectAll","enter","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport * as d3 from \"d3\"\n// import data from './sample.csv'\n\nconst data = d3.csvParse('./sample.csv', d3.autoType)\n\n\n// function convert(d) {\n//   return{\n//     d.date : new Date(d.date);\n//     d.positive: +d.positive;\n//   };\n// }\n\n\nclass LineChart extends Component {\n  componentDidMount() {\n    this.drawChart(data)\n  }\n\n  drawChart(data) {\n    const width = 960;\n    const height = 500;\n    const margin = {top: 50, right: 50, bottom: 50, left:50};\n\n    const xScale = d3.scaleTime()\n      .domain(d3.extent(data, d => d.date))\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain ([0, d3.max(data, d => d.positive)]).nice()\n      .range([height - margin.bottom, margin.top])\n\n    const xAxis = d3.axisBottom()\n      .ticks(d3.timeDay.every(1))\n      .tickFormat(d3.timeFormat('%m/%d'))\n      .scale(xScale);\n\n    const yAxis = d3.axisLeft()\n      .ticks(10)\n      .scale(yScale);\n\n    const line = d3.line()\n      .x(d => xScale(d.date))\n      .y(d => yScale(d.positive))\n\n    const svg = d3.select(this.refs.chart)\n      .append(\"svg\")\n      .attr('width', width )\n      .attr('height', height )\n\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n      .call(xAxis);\n\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(yAxis);\n\n    const g = svg.selectAll(\"g\")\n      .data(data)\n      .enter()\n        .append(\"g\")\n\n    g.append(\"path\")\n         .attr(\"stroke-width\", 2)\n         .attr(\"stroke\", \"steelblue\")\n         .attr(\"fill\", \"none\")\n         .attr(\"d\", line(data))\n\n    // g.append(\"circle\")\n    //      .attr(\"r\", 3.5)\n    //      .attr(\"stroke\", \"steelblue\")\n    //      .attr(\"fill\", \"steelblue\")\n    //      .attr(\"cx\", function(d) { return xScale(d.date); })\n    //      .attr(\"cy\", function(d) { return yScale(d.positive); })\n  }\n\n  render() {return <div ref=\"chart\"></div>}\n}\n\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}