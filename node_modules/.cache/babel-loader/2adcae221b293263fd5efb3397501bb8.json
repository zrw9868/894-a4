{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/Desktop/A4-How-does-Coronavirus-spreadirus-spread/my-app/src/LineChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nconst width = 960;\nconst height = 500;\nconst margin = {\n  top: 50,\n  right: 50,\n  bottom: 100,\n  left: 50\n};\n\nclass LineChart extends Component {\n  componentDidMount() {\n    this.drawChart(this.props.data);\n  }\n\n  componentDidUpdate() {\n    this.update(this.props.data, this.props.threshold);\n  }\n\n  drawChart(data) {\n    // ------- scale ---------//\n    // let new_data = data.filter(function(d) {return d.date <\n    var startDate = data.dates[0],\n        endDate = data.dates[data.dates.length - 1];\n    var maxi = d3.max(data.series, s => d3.max(s.positive));\n    var xScale = d3.scaleTime().domain([startDate, endDate]).range([margin.left, width - margin.right]);\n    var yScale = d3.scaleLinear() // d3.max(data, d => d.positive)\n    .domain([0, maxi]).nice().range([height - margin.bottom, margin.top]); // --------- axis --------//\n\n    const xAxis = d3.axisBottom().ticks(d3.timeDay.every(1)).tickFormat(d3.timeFormat('%m/%d')).scale(xScale);\n    const yAxis = d3.axisLeft().ticks(10).scale(yScale); // ------- draw --------//\n\n    this.svg = d3.select(this.refs.chart).append(\"svg\").attr('width', width).attr('height', height);\n    this.svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.bottom})`).call(xAxis);\n    this.svg.append(\"g\").attr(\"transform\", `translate(${margin.left},0)`).call(yAxis);\n    this.chart = this.svg.append(\"g\");\n  }\n\n  update(data, threshold) {\n    // let new_data = data.filter(function(d) {return d.date <\n    console.log(threshold);\n    console.log();\n    var time = new Date(\"2020-03-13\");\n    console.log(\"fg\");\n    console.log(data.dates[0].year());\n    console.log(+data.dates[0] === +threshold);\n    var index = data.dates.findIndex(function (d) {\n      return +d === +threshold;\n    });\n    console.log(index);\n    console.log(threshold);\n    var new_data = data.series.map(d => ({\n      date: d.name,\n      positive: d.positive\n    }));\n    let a = data.series[0].positive.filter(function (date) {\n      return date < threshold;\n    });\n    console.log(a);\n    var startDate = data.dates[0],\n        endDate = data.dates[data.dates.length - 1];\n    var maxi = d3.max(data.series, s => d3.max(s.positive));\n    var xScale = d3.scaleTime().domain([startDate, endDate]).range([margin.left, width - margin.right]);\n    var yScale = d3.scaleLinear().domain([0, maxi]).nice().range([height - margin.bottom, margin.top]);\n    var line = d3.line().x((d, i) => xScale(data.dates[i])).y(d => yScale(d));\n    this.chart.selectAll(\"path\").data(new_data).join(\"path\").attr(\"stroke-width\", 2).attr(\"stroke\", \"steelblue\").attr(\"fill\", \"none\").attr(\"d\", d => line(d.positive));\n    this.chart.selectAll('circle').data(new_data).join(\"circle\").attr(\"r\", 4.5).attr(\"stroke\", \"steelblue\").attr(\"fill\", \"steelblue\").attr(\"cx\", function (d, i) {\n      return xScale(data.dates[i]);\n    }).attr(\"cy\", function (d) {\n      return yScale(d.positive);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 20\n      }\n    });\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/rachel/Desktop/A4-How-does-Coronavirus-spreadirus-spread/my-app/src/LineChart.js"],"names":["React","Component","d3","width","height","margin","top","right","bottom","left","LineChart","componentDidMount","drawChart","props","data","componentDidUpdate","update","threshold","startDate","dates","endDate","length","maxi","max","series","s","positive","xScale","scaleTime","domain","range","yScale","scaleLinear","nice","xAxis","axisBottom","ticks","timeDay","every","tickFormat","timeFormat","scale","yAxis","axisLeft","svg","select","refs","chart","append","attr","call","console","log","time","Date","year","index","findIndex","d","new_data","map","date","name","a","filter","line","x","i","y","selectAll","join","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport * as d3 from \"d3\"\n\nconst width = 960;\nconst height = 500;\nconst margin = {top: 50, right: 50, bottom: 100, left:50};\n\nclass LineChart extends Component {\n\n  componentDidMount() {\n    this.drawChart(this.props.data)\n  }\n\n  componentDidUpdate(){\n    this.update(this.props.data, this.props.threshold)\n  }\n\n  drawChart(data) {\n    // ------- scale ---------//\n    // let new_data = data.filter(function(d) {return d.date <\n    var startDate = data.dates[0],\n        endDate = data.dates[data.dates.length-1];\n\n    var maxi = d3.max(data.series, s => d3.max(s.positive))\n\n    var xScale = d3.scaleTime()\n      .domain([startDate, endDate])\n      .range([margin.left, width - margin.right]);\n\n    var yScale = d3.scaleLinear()\n      // d3.max(data, d => d.positive)\n      .domain ([0, maxi]).nice()\n      .range([height - margin.bottom, margin.top])\n\n    // --------- axis --------//\n    const xAxis = d3.axisBottom()\n      .ticks(d3.timeDay.every(1))\n      .tickFormat(d3.timeFormat('%m/%d'))\n      .scale(xScale);\n\n    const yAxis = d3.axisLeft()\n      .ticks(10)\n      .scale(yScale);\n\n    // ------- draw --------//\n    this.svg = d3.select(this.refs.chart)\n      .append(\"svg\")\n      .attr('width', width )\n      .attr('height', height )\n\n    this.svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n      .call(xAxis);\n\n    this.svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(yAxis);\n\n    this.chart = this.svg.append(\"g\")\n    }\n\n    var\n\n\n    update(data, threshold){\n      // let new_data = data.filter(function(d) {return d.date <\n\n\n\n      console.log(threshold)\n      console.log()\n      var time = new Date(\"2020-03-13\")\n      console.log(\"fg\")\n      console.log(data.dates[0].year())\n      console.log(+data.dates[0] === +threshold)\n      var index = data.dates.findIndex(function(d) {return +d === +threshold});\n\n      console.log(index)\n\n      console.log(threshold)\n      var new_data = data.series.map(d => ({\n          date: d.name,\n          positive: d.positive\n        }))\n\n      let a =data.series[0].positive.filter(function(date) {return date < threshold})\n      console.log(a)\n\n      var startDate = data.dates[0],\n          endDate = data.dates[data.dates.length-1];\n\n      var maxi = d3.max(data.series, s => d3.max(s.positive))\n\n      var xScale = d3.scaleTime()\n        .domain([startDate, endDate])\n        .range([margin.left, width - margin.right]);\n\n      var yScale = d3.scaleLinear()\n        .domain ([0, maxi]).nice()\n        .range([height - margin.bottom, margin.top])\n\n      var line = d3.line()\n        .x((d,i) => xScale(data.dates[i]))\n        .y(d => yScale(d))\n\n      this.chart.selectAll(\"path\")\n        .data(new_data)\n          .join(\"path\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", \"steelblue\")\n            .attr(\"fill\", \"none\")\n            .attr(\"d\", d=>line(d.positive))\n\n      this.chart.selectAll('circle')\n        .data(new_data)\n        .join(\"circle\")\n         .attr(\"r\", 4.5)\n         .attr(\"stroke\", \"steelblue\")\n         .attr(\"fill\", \"steelblue\")\n         .attr(\"cx\", function(d,i) {return xScale(data.dates[i]);})\n         .attr(\"cy\", function(d) { return yScale(d.positive); })\n\n    }\n\n  render() {return <div ref=\"chart\"></div>}\n}\n\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}