{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/Desktop/A4-How-does-Coronavirus-spread/my-app/src/LineChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport datajson from './us.json';\nconsole.log(datajson);\n\nfor (var i = 0; i < datajson.length; i++) {\n  datajson[i].date = new Date(datajson[i].date);\n}\n\nclass LineChart extends Component {\n  componentDidMount() {\n    this.drawChart(datajson);\n  }\n\n  drawChart(data) {\n    const width = 960;\n    const height = 500;\n    const margin = {\n      top: 50,\n      right: 50,\n      bottom: 50,\n      left: 50\n    };\n    const xScale = d3.scaleTime().domain(d3.extent(data, d => d.date)).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.positive)]).nice().range([height - margin.bottom, margin.top]);\n    const xAxis = d3.axisBottom().ticks(d3.timeDay.every(1)).tickFormat(d3.timeFormat('%m/%d')).scale(xScale);\n    const yAxis = d3.axisLeft().ticks(10).scale(yScale);\n    const line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.positive));\n    const svg = d3.select(this.refs.chart).append(\"svg\").attr('width', width).attr('height', height);\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.bottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left},0)`).call(yAxis);\n    svg.append(\"path\").data(data).attr(\"stroke-width\", 2).attr(\"stroke\", \"steelblue\").attr(\"fill\", \"none\").attr(\"d\", line);\n    svg.append(\"circle\").data(data).attr(\"r\", 3.5).attr(\"stroke\", \"steelblue\").attr(\"fill\", \"steelblue\").attr(\"cx\", function (d) {\n      return xScale(d.date);\n    }).attr(\"cy\", function (d) {\n      return yScale(d.positive);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 20\n      }\n    });\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/rachel/Desktop/A4-How-does-Coronavirus-spread/my-app/src/LineChart.js"],"names":["React","Component","d3","datajson","console","log","i","length","date","Date","LineChart","componentDidMount","drawChart","data","width","height","margin","top","right","bottom","left","xScale","scaleTime","domain","extent","d","range","yScale","scaleLinear","max","positive","nice","xAxis","axisBottom","ticks","timeDay","every","tickFormat","timeFormat","scale","yAxis","axisLeft","line","x","y","svg","select","refs","chart","append","attr","call","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport * as d3 from \"d3\"\nimport datajson from './us.json'\n\nconsole.log(datajson)\n\nfor (var i=0; i < datajson.length; i++){\n  datajson[i].date = new Date(datajson[i].date)\n}\n\nclass LineChart extends Component {\n  componentDidMount() {\n    this.drawChart(datajson)\n  }\n\n  drawChart(data) {\n    const width = 960;\n    const height = 500;\n    const margin = {top: 50, right: 50, bottom: 50, left:50};\n\n    const xScale = d3.scaleTime()\n      .domain(d3.extent(data, d => d.date))\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain ([0, d3.max(data, d => d.positive)]).nice()\n      .range([height - margin.bottom, margin.top])\n\n    const xAxis = d3.axisBottom()\n      .ticks(d3.timeDay.every(1))\n      .tickFormat(d3.timeFormat('%m/%d'))\n      .scale(xScale);\n\n    const yAxis = d3.axisLeft()\n      .ticks(10)\n      .scale(yScale);\n\n    const line = d3.line()\n      .x(d => xScale(d.date))\n      .y(d => yScale(d.positive))\n\n    const svg = d3.select(this.refs.chart)\n      .append(\"svg\")\n      .attr('width', width )\n      .attr('height', height )\n\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n      .call(xAxis);\n\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(yAxis);\n\n\n\n    svg.append(\"path\")\n         .data(data)\n         .attr(\"stroke-width\", 2)\n         .attr(\"stroke\", \"steelblue\")\n         .attr(\"fill\", \"none\")\n         .attr(\"d\", line)\n\n    svg.append(\"circle\")\n        .data(data)\n         .attr(\"r\", 3.5)\n         .attr(\"stroke\", \"steelblue\")\n         .attr(\"fill\", \"steelblue\")\n         .attr(\"cx\", function(d) { return xScale(d.date); })\n         .attr(\"cy\", function(d) { return yScale(d.positive); })\n  }\n\n  render() {return <div ref=\"chart\"></div>}\n}\n\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}